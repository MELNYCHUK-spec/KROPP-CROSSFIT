@font-face {
    font-family: 'Heebo';
    src: url('./fonts/Heebo-Light.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Heebo';
    src: url('./fonts/Heebo-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Yantamanav';
    src: url('./fonts/Yantramanav-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

:where(address[class]) {
    font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
    display: block;
    max-width: 100%;
    height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
    /**
      Убираем скачок интерфейса по горизонтали
      при появлении / исчезновении скроллбара
     */
    scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
    display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
    cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
 */
[fill] {
    fill: currentColor;
}
[stroke] {
    stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
    border-collapse: collapse;
    border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

:root{
    --color-dark:#000000;
    --color-light:#ffffff;
    --color-dark-gray:#404040;
    --color-light-gray:#C4C4C4;

    --border-radius:30px;
    --border:1px solid var(--color-light);
    --font-family-base: 'Heebo', sans-serif;
    --font-family-accent: 'Yantramanav', sans-serif;

    --input-height:54px;
    /*Ширина ограничивающего контентного контейнера*/
    --container-width:1300px;
    /*Внутренний горизонтальный отступ для контента внутри контейнера*/
    --container--padding-x:15px;

    --transition-duration: 0.2s;
}

body{
    background-color:var(--color-dark);
    color:var(--color-light);
    font-size: 16px;
    line-height: 1.75;
    font-family:var(--font-family-base);
}

a,
button,
input,
textarea,
svg*{
    transition-duration:var(--transition-duration);
}
.container{
    /*Контентный ограничивающий контейнер(1300px) с внутренними горизонтальными отступами для контента(15px)*/
    max-width:calc(var(--container-width)+ var(--container--padding-x) * 2);
    margin-inline: auto;
    padding-inline:var(--container--padding-x);
}

h1,h2,h3,h4,h5,h6{
    font-weight: 700;
    text-transform: uppercase;
}

a{
    color:var(--color-light);
}

a:hover{
    color:var(--color-light-gray);
}

.button{
    display: inline-flex;
    height: 38px;
    align-items: center;
    padding-inline:26px;
    font-size: 12px;
    font-weight: 700;
    line-height: 2;
    /*Текст кнопки в одну строку*/
    white-space: nowrap;
    letter-spacing: 1.2px;
    text-transform: uppercase;
    background-color: var(--color-light);
    border-radius: var(--border-radius);
    border:none;
}

.button:hover{
    background-color: var(--color-light-gray);
}

.header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap:20px;
    padding-inline: 32px;
}

.header-logo{
    flex-shrink: 0;
}

.header-menu-list{
    display: flex;
    flex-wrap: wrap;
    column-gap:50px;
}

.header-menu-link{
    /*Область нажатия на ссылки увеличена за счет использования высоты
    90px как на макете. так как ссылки строчный элемент пришлось использовать
    inline-flex для задания высоты ссылки*/
    display:inline-flex;
    height: 90px;
    column-gap:7px;
    align-items: center;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size:12px;
    letter-spacing: 1.2px;
}

.header-menu-link.is-current::after{
    content:"";
    width:5px;
    height:5px;
    background-color:currentColor;
    border-radius:50%;
}

.header-actions{
    display: flex;
    column-gap:40px;
}

.header-burger-button{
    display:inline-flex;
    flex-direction:column;
    row-gap:4px;
    justify-content: center;
    width: 40px;
    height: 40px;
    background-color:transparent;
    border:var(--border);
    border-radius: var(--border-radius);
    padding-left:8px;
    color:var(--color-light);
}

.header-burger-button-line{
    height:1px;
    width:6px;
    background-color:currentColor;
    box-shadow: 16px 0 0 currentColor;
}

.header-burger-button:hover{
    color:var(--color-light-gray);
    border-color:currentColor;
}
/*ширина экрана устройства 1024px или меньше. */
/*@media (max-width: 1024px):
Этот медиазапрос срабатывает, когда ширина экрана устройства 1024 пикселя или меньше.

.header { flex-wrap: wrap; }:
Для элемента с классом header включается свойство flex-wrap: wrap. Это позволяет дочерним элементам переноситься на следующую строку, если они не помещаются в одну строку.

.header-menu { order: 1; flex-basis: 100%; }:

order: 1: Этот стиль определяет порядок отображения элемента внутри flex-контейнера. Элемент с этим стилем будет отображаться после элементов с меньшим значением order.
flex-basis: 100%: Указывает, что элемент header-menu должен занимать всю ширину контейнера.
Итог:
На устройствах с шириной экрана 1024px и меньше:

Элементы в .header переносятся на новую строку при необходимости.
Элемент .header-menu будет занимать всю ширину строки и отображаться первым в порядке вывода.*/
@media (max-width:1024px){
    .header{
        flex-wrap: wrap;
        padding-top:20px;
        row-gap:10px;
        padding-inline:15px;
    }
.header-menu{
    order:1;
    flex-basis:100%;
}
.header-menu-link{
    height: 50px;
}
}

@media (max-width:767px){
    .button{
        padding-inline:18px;
    }
    .header-menu-list{
        column-gap:20px;
    }
    .header-menu-link{
        height: 32px;
    }
    .header{
        padding-top:10px;
    }
    .header-actions{
        column-gap:15px;
    }
}

